
"use strict"

// **************–ú–∞—Å—Å–∏–≤—ã**************

//–î–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –æ—Å–æ–±–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö, –∫–æ—Ç–æ—Ä–∞—è –Ω–∞–∑—ã–≤–∞–µ—Ç—Å—è –º–∞—Å—Å–∏–≤, Array
//–ú–∞—Å—Å–∏–≤ - —ç—Ç–æ –ª–∞–∫–æ–Ω–∏—á–Ω—ã–π —Å–ø–æ—Å–æ–± —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ–¥ –æ–¥–Ω–∏–º –∏–º–µ–Ω–µ–º.

// **************–°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞****************
let arrOld = new Array(); //—Å—Ç–∞—Ä—ã–π —Å–ø–æ—Å–æ–±
let arr = []; // –Ω–æ–≤—ã–π —Å–ø–æ—Å–æ–±, –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —É–∫–∞–∑—ã–≤–∞—Ç—å –∏–Ω–∞—á–µ –±—É–¥–µ—Ç –æ—à–∏–±–∫–∞
console.log(arrOld)
console.log(arr)

// —Ä–∞–∑–Ω–∏—Ü–∞
// let arrOldSample = new Array(3);
// let arrSample = [3];
// console.log(arrOldSample)
// console.log(arrSample)

//–û—Ç—Å—á–µ—Ç —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å 0
arr[0] = 1; //–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω—É–ª–µ–≤–æ–π –∏–Ω–¥–µ–∫—Å –∑–Ω–∞—á–µ–Ω–∏—è 1
arr[5] = 5;
arr[32] = 40;
arr["fruit"] = "Apple"; // –Ω–µ—á–∏—Å–ª–æ–≤—ã–µ –∏–Ω–¥–µ–∫—Å—ã, –Ω–æ –ª—É—á—à–µ —Ç–∞–∫ –Ω–µ –¥–µ–ª–∞—Ç—å
console.log(arr); // –ø—É—Å—Ç—ã–µ –∏–Ω–¥–µ–∫—Å—ã ()
console.log(arr[2]); //undefined
console.log(arr["fruit"]);
console.log(arr[0]); // 1

//length - –¥–ª–∏–Ω–∞ –º–∞—Å—Å–∏–≤–∞. –í—Å–µ–≥–¥–∞ –Ω–∞ 1 –±–æ–ª—å—à–µ —á–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π –∏–Ω–¥–µ–∫—Å
console.log(arr.length); // 33

console.log(arr[arr.length - 1]); // –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ?
console.log(arr)
arr.length = 2; // —á—Ç–æ –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç –∏ –ø–æ—á–µ–º—É –ª—É—á—à–µ –Ω–µ –¥–µ–ª–∞—Ç—å
console.log(arr)
let arr2 = [1, 20, "Hello", true] // —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –≤ –º–∞—Å—Å–∏–≤–µ
let a = 1, b = 2, c = 3;
let arr3 = [a, b, c]; // –ø–µ—Ä–µ–¥–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –≤ –º–∞—Å—Å–∏–≤

console.log(arr3)

let arr4 = [
  [1, 2, 3],
  [4, 5, 6],
  [7, 8, 8]
]
// –º–Ω–æ–≥–æ–º–µ—Ä–Ω—ã–π –º–∞—Å—Å–∏–≤, –º–∞—Ç—Ä–∏—Ü–∞
// –∫–∞–∫ –ø–æ–ª—É—á–∏—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ 5 –∏–∑ —ç—Ç–æ–≥–æ –º–∞—Å—Å–∏–≤–∞?
console.log(arr4[1][1])



// **************–ú–µ—Ç–æ–¥—ã –º–∞—Å—Å–∏–≤–æ–≤****************

// –ü–µ—Ä–µ–±–æ—Ä —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –º–∞—Å—Å–∏–≤–µ. –¶–∏–∫–ª—ã
// for
// for ... of ...
// for ... in ...
let fruits = ["–Ø–±–ª–æ–∫–æ", "–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞"]
for (let i = 0; i < fruits.length; i++) {
  console.log(fruits[i]);
}

for (let value of fruits) {
  console.log(value);
}
for (let value in fruits) { //–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –¥–ª—è –æ–±—ä–µ–∫—Ç–æ–≤, –¥–ª—è –º–∞—Å—Å–∏–≤–æ–≤ –Ω–µ—Ç!
  console.log("for in " + value);
}


// pop/push, shift/unshift
// pop - —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –∫–æ–Ω—Ü–∞
// push - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω–µ—Ü

// shift - —É–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –Ω–∞—á–∞–ª–∞
// unshift - –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ –Ω–∞—á–∞–ª–æ
fruits = ["–Ø–±–ª–æ–∫–æ", "–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞"]
// fruits[fruits.length] = "–í–∏—à–Ω—è"
fruits.push("–í–∏—à–Ω—è"); //["–Ø–±–ª–æ–∫–æ", "–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞", "–í–∏—à–Ω—è"];
fruits.unshift("–ê–Ω–∞–Ω–∞—Å"); //["–ê–Ω–∞–Ω–∞—Å", "–Ø–±–ª–æ–∫–æ", "–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞", "–í–∏—à–Ω—è"];
console.log(fruits)
let cherry = fruits.pop(); //["–ê–Ω–∞–Ω–∞—Å", "–Ø–±–ª–æ–∫–æ", "–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞"];
console.log(cherry);
console.log(fruits);
fruits.shift(); // ["–Ø–±–ª–æ–∫–æ", "–ê–ø–µ–ª—å—Å–∏–Ω", "–ì—Ä—É—à–∞"]

// –º–æ–∂–Ω–æ —Å–æ—Ö—Ä–∞–Ω—è—Ç—å —É–¥–∞–ª–µ–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
let lastFruit = fruits.pop();
console.log(lastFruit); // "–ì—Ä—É—à–∞"
console.log(fruits); //["–Ø–±–ª–æ–∫–æ", "–ê–ø–µ–ª—å—Å–∏–Ω"]

//–î–æ–±–∞–≤–ª—è—Ç—å –º–æ–∂–Ω–æ —Å—Ä–∞–∑—É –Ω–µ—Å–∫–æ–ª—å–∫–æ 
fruits.push("–í–∏—à–Ω—è", "–°–ª–∏–≤–∞");


// –£–¥–∞–ª–µ–Ω–∏–µ –∏–∑ –º–∞—Å—Å–∏–≤–∞
// –ú–µ—Ç–æ–¥ delete
arr = ["–Ø", "–£—á—É", "JS"];
delete arr[1]; // —É–¥–∞–ª—è–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ —Å –∏–Ω–¥–µ–∫—Å–æ–º 1
console.log(arr) // –æ–±—Ä–∞–∑–æ–≤–∞–ª–∞—Å—å –¥—ã—Ä–∫–∞
console.log(arr[1]);


arr = [1, undefined, 3]
console.log(arr)


// .join() , .split()
// –ö–∞–∫–∞—è –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç—å –µ—Å—Ç—å –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å–æ —Å—Ç—Ä–æ–∫–∞–º–∏?

arr = ["–Ø", "–£—á—É", "JS"];
let str = arr.join(" "); // "–Ø –£—á—É JS"

let str2 = "1234";
console.log(str2);
arr = str2.split(""); //[1, 2, 3, 4]

let strText = "–Ω–∞–¥–µ–∂–¥–∞ –≥—É—Ä—å—è–Ω";
let arrText = strText.split("");
for (let i = 0; i < arrText.length; i++) {
  arrText[i] = arrText[i].toUpperCase();
}
console.log(arrText);
strText = arrText.join(" ");
console.log(strText);




// .indexOf()
//–ú–µ—Ç–æ–¥ .indexOf() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ø–µ—Ä–≤—ã–π –∏–Ω–¥–µ–∫—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –¥–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–∞–π–¥–µ–Ω –≤ –º–∞—Å—Å–∏–≤–µ –∏–ª–∏ -1, –µ—Å–ª–∏ —Ç–∞–∫–æ–≥–æ –∏–Ω–¥–µ–∫—Å–∞ –Ω–µ—Ç
arr = [1, 2, 3, 4, 5, 1];
console.log(arr.indexOf(1));
console.log(arr.indexOf(6));

// .lastIndexOf()  –∏—â–µ—Ç –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –∫–æ–Ω—Ü–∞
arr = [1, 2, 3, 4, 5, 1];
console.log(arr.lastIndexOf(1));
console.log(arr.lastIndexOf(6));

// .reverse() - –ø–µ—Ä–µ–≤–æ—Ä–æ—Ç. –º–µ–Ω—è–µ—Ç —Å–∞–º –º–∞—Å—Å–∏–≤

arr = [1, 2, 3, 4, 5];
arr.reverse();
console.log(arr)


// .splice() - —É–¥–∞–ª–µ–Ω–∏–µ —á–∞—Å—Ç–∏ –º–∞—Å—Å–∏–≤–∞ –∏/–∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —á–∞—Å—Ç–∏
// array.splice(start[, deleteCount[, item1[, item2[, ...]]]])
// start - –∏–Ω–¥–µ–∫—Å, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –Ω–∞—á–∏–Ω–∞–µ—Ç –∏–∑–º–µ–Ω—è—Ç—å –º–∞—Å—Å–∏–≤. 
// –ï—Å–ª–∏ –±–æ–ª—å—à–µ –¥–ª–∏–Ω—ã –º–∞—Å—Å–∏–≤–∞, —Ä–µ–∞–ª—å–Ω—ã–π –∏–Ω–¥–µ–∫—Å –±—É–¥–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–∞ –¥–ª–∏–Ω—É –º–∞—Å—Å–∏–≤–∞. –ï—Å–ª–∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª–µ–Ω, —É–∫–∞–∑—ã–≤–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ —Å –∫–æ–Ω—Ü–∞.

// deleteCount 
// –¶–µ–ª–æ–µ —á–∏—Å–ª–æ, –ø–æ–∫–∞–∑—ã–≤–∞—é—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–¥–∞–ª—è–µ–º—ã—Ö –∏–∑ –º–∞—Å—Å–∏–≤–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤. –ï—Å–ª–∏ deleteCount —Ä–∞–≤–µ–Ω 0, —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–µ —É–¥–∞–ª—è—é—Ç—Å—è.


arr = ["–Ø", "–£—á—É", "JS"];
arr.splice(1, 2); //–Ω–∞—á–∏–Ω–∞–µ–º —Å 1 –∏–Ω–¥–µ–∫—Å–∞ –∏ —É–¥–∞–ª—è–µ–º 1 —ç–ª–µ–º–µ–Ω—Ç
console.log(arr) //["–Ø"]


arr = ["–Ø", "–£—á—É", "JS"];
arr2 = arr.splice(1, 1); //–≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –∑–∞–ø–∏—Å–∞–ª–∏ –≤—ã—Ä–µ–∑–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ
console.log("*********")
console.log(arr); // ["–Ø", "JS"]
console.log(arr2) // ["–£—á—É"]

// .slice() - —Ç–æ–∂–µ —á—Ç–æ –∏ splice, –ù–û! –Ω–µ –º–µ–Ω—è–µ—Ç —Ç–µ–∫—É—â–∏–π –º–∞—Å—Å–∏–≤, –∞ –∫–æ–ø–∏—Ä—É–µ—Ç –æ—Ç begin –∫ end, –Ω–µ –≤–∫–ª—é—á–∞—è end

// arr.slice([begin[, end]])

// –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ slice –∑–∞–ø–∏—à–∏—Ç–µ –≤ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç—ã [1, 2, 3].
arr = [1, 2, 3, 4, 5];
arr2 = arr.splice(0, 3);
console.log(arr)
console.log(arr2)

// –ó–∞–¥–∞—á–∞
// –î–∞–Ω –º–∞—Å—Å–∏–≤ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ splice —Å–¥–µ–ª–∞–π—Ç–µ –∏–∑ –Ω–µ–≥–æ –º–∞—Å—Å–∏–≤ [1, 'a', 'b', 2, 'c', 5, 'e'].
arr = [1, 2, 3, 4, 5];
arr.splice(1, 0, "a", "b");
arr.splice(4, 2, "c");
arr.push("e");
console.log(arr)

//  –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞
console.log("New Arrs")
arr = [1, 2, 3, 4, 5];
const arrCopy = arr;
console.log(arr);
console.log(arrCopy);

arrCopy.push(6);
console.log(arr);  //
console.log(arrCopy); //

// –∫–∞–∫ –º–æ–∂–Ω–æ —Ä–µ—à–∏—Ç—å –∑–∞–¥–∞—á—É?
// –°–ø–æ—Å–æ–± 1
arr = [1, 2, 3, 4, 5];
let arrCopy1 = [];
for (let i = 0; i < arr.length; i++) {
  arrCopy1.push(arr[i]);
}
arr.push(6);
console.log(arr)
console.log(arrCopy1)

// –°–ø–æ—Å–æ–± 2
arr = [1, 2, 3, 4, 5];
arrCopy1 = arr.slice(0);
arr.push(6);
console.log(arr)
console.log(arrCopy1)

// –°–ø–æ—Å–æ–± 3
// .concat()
arr = [1, 2, 3, 4, 5];
arr2 = ["Hello", "Pete"];
arr3 = []
arr3 = arr.concat(arr2);
console.log(arr3)

// –°–ø–æ—Å–æ–± 4
arr = [1, 2, 3, 4, 5];
arrCopy1 = [...arr];
arr.push(6);
console.log(arr);
console.log(arrCopy1);

// –†–µ—à–∏—Ç—å —á–µ—Ä–µ–∑ —Ü–∏–∫–ª—ã

////////// –ó–∞–¥–∞—á–∏
// 1) –î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏ [1, 2, 3, 4, 5]. –° –ø–æ–º–æ—â—å—é —Ü–∏–∫–ª–∞ –≤—ã–≤–µ–¥–∏—Ç–µ –≤—Å–µ —ç—Ç–∏ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–∞ —ç–∫—Ä–∞–Ω

let arr1 = [1, 2, 3, 4, 5];
for (let i = 0; i < arr1.length; i++) {
  document.write(`<p>${arr1[i]}</p>`)
}


// 2) –î–∞–Ω –º–∞—Å—Å–∏–≤ —Å —á–∏—Å–ª–∞–º–∏ [-2, -1, -3, 15, 0, -4, 2, -5, 9, -15, 0, 4, 5, -6, 10, 7]. –ß–∏—Å–ª–∞ –º–æ–≥—É—Ç –±—ã—Ç—å –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–º–∏ –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–º–∏. –í—ã–≤–µ–¥–∏—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–æ–ª—å–∫–æ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã–µ —á–∏—Å–ª–∞, –∫–æ—Ç–æ—Ä—ã–µ –±–æ–ª—å—à–µ -10, –Ω–æ –º–µ–Ω—å—à–µ -3.

arr2 = [-2, -1, -3, 15, 0, -4, 2, -5, 9, -15, 0, 4, 5, -6, 10, 7];
for (let i = 0; i < arr2.length; i++) {
  if (arr2[i] > -10 && arr2[i] < -3) {
    document.write(`<p>${arr2[i]}</p>`)
  }
}

// –≤—Å–µ –æ—Ç—Ä–∏—Ü —Å–¥–µ–ª–∞—Ç—å –ø–æ–ª–æ–∂–∏—Ç

arr2 = [-2, -1, -3, 15, 0, -4, 2, -5, 9, -15, 0, 4, 5, -6, 10, 7];
for (let i = 0; i < arr2.length; i++) {
  if (arr2[i] < 0) {
    arr2[i] = arr2[i] * (-1);
  }

}
console.log(arr2)

// 3) –î–∞–Ω –º–∞—Å—Å–∏–≤ ["Banana", "Orange", "Apple", "Mango", "Apple"]. –ó–∞–º–µ–Ω–∏—Ç—å –≤—Å–µ —è–±–ª–æ–∫–∏ –Ω–∞ –≥—Ä—É—à–∏


// 4) –î–∞–Ω –º–∞—Å—Å–∏–≤ —á–∏—Å–ª–∞–º–∏ (—Å—Ç—Ä–æ—á–Ω–æ–≥–æ —Ç–∏–ø–∞), –Ω–∞–ø—Ä–∏–º–µ—Ä: [‚Äò10‚Äô, ‚Äò20‚Äô, ‚Äò30‚Äô, ‚Äò50‚Äô, ‚Äò235‚Äô, ‚Äò3000‚Äô].

// –í—ã–≤–µ–¥–∏—Ç–µ –Ω–∞ —ç–∫—Ä–∞–Ω —Ç–æ–ª—å–∫–æ —Ç–µ —á–∏—Å–ª–∞ –∏–∑ –º–∞—Å—Å–∏–≤–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞—é—Ç—Å—è –Ω–∞ —Ü–∏—Ñ—Ä—É 1, 2 –∏–ª–∏ 5

// 5) –ù–∞–ø–∏—à–∏—Ç–µ —Å–∫—Ä–∏–ø—Ç, —Å—á–∏—Ç–∞—é—â–∏–π –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –Ω—É–ª–µ–≤—ã—Ö (–ø—É—Å—Ç—ã—Ö) —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∑–∞–¥–∞–Ω–Ω–æ–º —Ü–µ–ª–æ—á–∏—Å–ª–µ–Ω–Ω–æ–º –º–∞—Å—Å–∏–≤–µ [5, 9, 21, , , 9, 78, , , , 6].

// 7) –ù–∞–π–¥–∏—Ç–µ —Å—É–º–º—É —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –º–µ–∂–¥—É –¥–≤—É–º—è –Ω—É–ª—è–º–∏ (–ø–µ—Ä–≤—ã–º –∏ –ø–æ—Å–ª–µ–¥–Ω–∏–º –Ω—É–ª—è–º–∏ –≤ –º–∞—Å—Å–∏–≤–µ). –ï—Å–ª–∏ –¥–≤—É—Ö –Ω—É–ª–µ–π –Ω–µ—Ç –≤ –º–∞—Å—Å–∏–≤–µ, —Ç–æ –≤—ã–≤–µ–¥–∏—Ç–µ –Ω–æ–ª—å. –í –º–∞—Å—Å–∏–≤–µ –º–æ–∂–µ—Ç –±—ã—Ç—å –±–æ–ª–µ–µ 2—Ö –Ω—É–ª–µ–π. –ü—Ä–∏–º–µ—Ä –º–∞—Å—Å–∏–≤–∞: [48,9,0,4,21,2,1,0,8,84,76,8,4,13,2] –∏–ª–∏ [1,8,0,13,76,8,7,0,22,0,2,3,2]


// Task 1 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

//     const colors = ['red', 'green', 'blue']
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –¥–ª–∏–Ω—É.
const colors = ['red', 'green', 'blue'];
console.log(colors.length);

// Task 2 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

//     const animals = ['monkey', 'dog', 'cat']
// –í—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –µ–≥–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –≤–Ω–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –µ–≥–æ –¥–ª–∏–Ω–Ω—ã.

const animals = ['monkey', 'dog', 'cat'];
console.log(animals[animals.length - 1]);
console.log(animals.at(-1));

// Task 3 üñ•
// –î–∞–Ω –º–∞—Å—Å–∏–≤:

//     const numbers = [5, 43, 63, 23, 90]
// –£–¥–∞–ª–∏—Ç–µ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –º–∞—Å—Å–∏–≤–µ –∏ –≤—ã–≤–µ–¥–∏—Ç–µ –≤ –∫–æ–Ω—Å–æ–ª—å –ø–æ–ª—É—á–µ–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç.

// –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏.

const numbers = [5, 43, 63, 23, 90];
numbers.length = 0;
console.log(numbers);

const numbers = [5, 43, 63, 23, 90];
numbers.splice(0);
console.log(numbers);

// –í—ã—á–∏—Å–ª–∏—Ç–µ —Å—Ä–µ–¥–Ω—é—é –∑–∞—Ä–ø–ª–∞—Ç—É —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –ø–æ–º–µ—Å—Ç–∏—Ç–µ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

let sumCount = 0;
let count = 0;
let salaries = {
  andreyK: 500,
  sveta: 413,
  anton: 987,
  andrey: 664,
  alexandra: 199
}
for (let item in salaries) {
  console.log(salaries[item]);
  sumCount += salaries[item];
  count++;

}
let avg = sumCount / count;
console.log(avg)

console.log(salaries)

//–°–æ–∑–¥–∞—Ç—å –≤–∞–ª–∏–¥–∞—Ç–æ—Ä, –∑–∞–ø—Ä–æ—Å–∏—Ç—å —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏. –ó–∞—Ç–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞–ø–∏—Å–∞—Ç—å –≤ –æ–±—å–µ–∫—Ç. 
//–ü–æ—Ç–æ–º –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –¥–∞–Ω–Ω—ã–µ. –ï—Å–ª–∏ –≤–µ—Ä–Ω–æ –≤–≤–µ–¥–µ–Ω –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å, –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–í–∞—Ç—å

let userCheck = function () {
  let userLoginCheck = prompt('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ª–æ–≥–∏–Ω'),
    userPassCheck = prompt('–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å');
  if (userLoginCheck === this.login && userPassCheck === this.pass) {
    console.log('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å');
  } else {
    console.log('–ù–µ–≤–µ—Ä–Ω–æ');
  }
}

let userInfo = function () {
  let userLogin = prompt('–í–≤–µ–¥–∏—Ç–µ –ª–æ–≥–∏–Ω'),
    userPass = prompt('–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å'),
    userInfoObj = {
      login: userLogin,
      pass: userPass,
      check: userCheck
    };
  return userInfoObj;
}

let user1 = userInfo();

user1.check();


//–¢–ê–±–ª–∏—Ü–∞ —É–º–Ω–æ–∂–µ–Ω–∏—è


let i = 0;
for (i = 1; i <= 10; i++) {
  document.write(i + `<br> `);
  for (let j = 1; j <= 10; j++) {
    document.write(`${i} * ${j} = ${i * j} <br>`)
  }
}

