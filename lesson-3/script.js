"use strict";

//#### Task 1 üíª #####

function isEven(f) {
    return (f % 2 === 0);
}
console.log(isEven(5));
console.log(isEven(8));

//#### Task 2 üíª #####

function checkNumberLength(g) {
    return String(g).length;
}
console.log(checkNumberLength(1234567));

//#### Task 3 üíª #####

function getSum(h) {
    return (h * (h + 1)) / 2; //—Ñ–æ—Ä–º—É–ª–∞ –∏–∑ –∫—É—Ä—Å–∞ —à–∫–æ–ª—å–Ω–æ–π –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏. —Ä–∞–±–æ—Ç–∞–µ—Ç.
}
console.log(getSum(100));


//#### Task 4 üíª #####

function getOverpay(e) {
    const taxPerYear = 17;
    const taxPerMonth = (taxPerYear / 12) / 100;
    const yearPeriod = 5;
    const monthPeriod = yearPeriod * 12;
    //—Ä–∞—Å—á–∏—Ç–∞–µ–º –ø–ª–∞—Ç—ë–∂ –≤ –º–µ—Å—è—Ü (–∞–Ω–Ω—É–∏—Ç–µ—Ç–Ω—ã–π —Ç–∏–ø –∫—Ä–µ–¥–∏—Ç–∞, –∫–æ–≥–¥–∞ –ø–ª–∞—Ç–µ–∂–∏ —Ä–∞–∑–±–∏—Ç—ã –Ω–∞ —Ä–∞–≤–Ω—ã–µ —á–∞—Å—Ç–∏):
    const payPerMonth = (e * (taxPerMonth * ((1 + taxPerMonth) ** monthPeriod)) / (((1 + taxPerMonth) ** monthPeriod) - 1));
    console.log (`–ü–µ—Ä–µ–ø–ª–∞—Ç–∞ –∑–∞ –∫—Ä–µ–¥–∏—Ç –Ω–∞ —Å—É–º–º—É ${e} –Ω–∞ ${yearPeriod} –ª–µ—Ç —Å–æ—Å—Ç–∞–≤–∏—Ç ${Math.round(((payPerMonth * monthPeriod) - e))}`);
    // –ø—Ä–∏–º–µ–Ω–∏–ª –æ–∫—Ä—É–≥–ª–µ–Ω–∏–µ –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ—Å—Ç–∏
}
getOverpay(100000);

//#### Task 5 üíª #####

function trimString(someString, from, to) {
   console.log(someString.substr(from, to));
}
// —á–µ—Å—Ç–Ω–æ –≥–æ–≤–æ—Ä—è –Ω–µ –ø–æ—à–ª–∞ —ç—Ç–∞ –∑–∞–¥–∞—á–∞ —Å–æ–≤—Å–µ–º... –ø–æ–¥—Å–º–æ—Ç—Ä–µ–ª, —á—Ç–æ –µ—Å—Ç—å —Ç–∞–∫–æ–π –º–µ—Ç–æ–¥ substr() - —Ä–∞–±–æ—Ç–∞–µ—Ç
// substr() –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —É–∫–∞–∑–∞–Ω–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–∏–º–≤–æ–ª–æ–≤ –∏–∑ —Å—Ç—Ä–æ–∫–∏, –Ω–∞—á–∏–Ω–∞—è —Å —É–∫–∞–∑–∞–Ω–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
trimString('Hello world', 0, 5);

//#### Task 6 üíª #####

function getSumNumbers(num) {
    if (num != null && num != undefined){
        let numToString = String(num);
        sum = 0;
        for(i = 0; i <numToString.length; i++){
            sum += Number(numToString[i]);
            console.log(sum);
        }
        } else {
            console.log('Error');
        }
    }
    getSumNumbers(2021);

//#### Task 7 üíª #####

function getSum(a,b) {
    let min = (a < b) ? a : b;
    let max = (a > b) ? a : b;
    let sum = 0;
    if (a === b) {
        console.log(a + ' Since both are same');
    } else {
    for (i = min; i <= max; i++) {
        sum += i;
    }
    console.log(sum);
    }
}
getSum(3, 2);

//#### Task 8 üíª #####

function foo() {
    return console.log('foo');
}

function boo() {
    return console.log('boo');
}

function fooboo(bool, param1, param2) {
    return bool ? foo() : boo();
}
fooboo(0, 2, 3);

//#### Task 9 üíª #####

function greet(name) {
    return console.log(`"Hello, ${name} how are you doing today?"`);
}
greet('Siarhei');


// ### ADVANCED level ####

// #### Task 1 üë®‚Äçüè´ ####

function isTriangle(a, b, c) {
    // —Ñ–æ—Ä–º—É–ª–∞ –∏–∑ —Ç–µ–æ—Ä–µ–º—ã –æ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–∏ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞
    return console.log((a + b > c) && (a + c > b) && (b + c > a));
}
isTriangle(10, 2, 9);

// #### Task 2 üë®‚Äçüè´ #### –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è, –æ—Å—Ç–∞–≤–∏–ª –Ω–∞ –ø–æ–¥—É–º–∞—Ç—å 

function separateNumber(anyNum) {
    let numToString = String(anyNum);
    console.log(`–¶–∏—Ñ—Ä—ã —á–∏—Å–ª–∞ ${anyNum}:`);
    for (i = 0; i < numToString.length; i++) {
        anyNum = numToString[i] + ' ';
        return console.log(anyNum);
    }
}
separateNumber(456789);
function countNumber(anyNum){
    let count = String(anyNum).length;
    return console.log (`–í —á–∏—Å–ª–µ ${anyNum} ${count} —Ü–∏—Ñ—Ä`);
}

function summNumber(anyNum){
    let numToString = String(anyNum);
    sum = 0;
    for(i = 0; i < numToString.length; i++){
        sum += Number(numToString[i]);
        return console.log(`–°—É–º–º–∞ —á–∏—Å–µ–ª —á–∏—Å–ª–∞ ${anyNum} —Ä–∞–≤–Ω–∞ ${sum}`);
    }
}

function reverseNumber(anyNum){

}

// #### Task 3 üë®‚Äçüè´ ####

const areaOrPerimeter = function(l , w) {
    if (l != w){
      return console.log(l * 2 + w * 2);
    } else {
      return console.log(l ** 2);
    }
  }
  areaOrPerimeter(3, 3);

