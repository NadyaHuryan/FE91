"use strict";

// <h1 align="center">Functions level 2</h1>

// ## Complete exercise

// ### NORMAL level

// #### Task 1 üñ•

// –í—ã–≤–µ–¥–∏ –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Å—Å–∏–≤–∞ –≤ –∫–æ–Ω—Å–æ–ª—å —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ **`forEach`**

// ```javascript
//     const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]
// ```

// > –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è `function declaration` & `arrow function`

console.log("Task 1");
{
  const fibonacci = [
    0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,
  ];

  // function declaration
  function showFibonacci(number) {
    console.log(number);
  }
  fibonacci.forEach(showFibonacci);

  // arrow function
  fibonacci.forEach((element) => console.log(element));

  // ! —Ç–∞–∫–∞—è –∑–∞–ø–∏—Å—å —è–≤–ª—è–µ—Ç—Å—è function expression?

  fibonacci.forEach(function (element) {
    console.log(element);
  });
}

// #### Task 2 üñ•

// –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ **`map`** —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤, –Ω–∞ –æ—Å–Ω–æ–≤–µ –º–∞—Å—Å–∏–≤–∞ **`users`**, –≤ –∫–æ—Ç–æ—Ä–æ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞ –±—É–¥–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤–∏–¥–∞:

// > ['member 1: Darya', 'member 2: Masha', ... etc]

// ```javascript
//     const users = ['Darya', 'Masha', 'Denis', 'Vitaliy', 'Polina', 'Anton']
// ```

// > –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è `function declaration` & `arrow function`.

console.log("Task 2");

// function declaration
const users = ["Darya", "Masha", "Denis", "Vitaliy", "Polina", "Anton"];

function transformUsers(item, index) {
  return "member " + (index + 1) + ": " + item;
}

const newUsers = users.map(transformUsers);

console.log(newUsers);

// arrow function
const newUsers2 = users.map(
  (item, index) => "member " + (index + 1) + ": " + item
);

console.log(newUsers2);

// #### Task 3 üñ•

// –° –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ **`filter`** —Å–æ–∑–¥–∞–π—Ç–µ –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ –±—É–¥–µ—Ç –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª.

// ```javascript
//     const numbers = [7, -4, 32, -90, 54, 32, -21]
// ```

// > –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è `function declaration` & `arrow function`.

console.log("Task 3");
const numbers = [7, -4, 32, -90, 54, 32, -21];

// function declaration
function removesNegativeNumbers(num) {
  if (num >= 0) return true;
}

const result = numbers.filter(removesNegativeNumbers);

console.log(result);

// arrow function
const result1 = numbers.filter((item) => item >= 0);

console.log(result1);

// #### Task 4 üñ•

// –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ **`reduce`** –ø–æ–ª—É—á–∏—Ç–µ —Å—É–º–º—É –≤—Å–µ—Ö —á–∏—Å–µ–ª –º–∞—Å—Å–∏–≤–∞.

// ```javascript
//     const fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987]
// ```

// > –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è `function declaration` & `arrow function`.

console.log("Task 4");
const fibonacci = [
  0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987,
];
// function declaration
function getSumFibonacci(acc, item) {
  return acc + item;
}

const sumFibonacci = fibonacci.reduce(getSumFibonacci);
console.log(sumFibonacci);

// arrow function
const sumFibonacci1 = fibonacci.reduce(
  (leftElement, rightElement) => leftElement + rightElement
);

console.log(sumFibonacci1);

// #### Task 5 üñ•

// –ò—Å–ø–æ–ª—å–∑—É—è –º–µ—Ç–æ–¥ **`find`** –Ω–∞–π–¥–∏—Ç–µ –≤ –º–∞—Å—Å–∏–≤–µ –ø–µ—Ä–≤–æ–µ —á–µ—Ç–Ω–æ–µ —á–∏—Å–ª–æ.

// ```javascript
//     const numbers = [5, 9, 13, 24, 54, 10, 13, 99, 1, 5]
// ```

// > –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ä–µ—à–µ–Ω–∏–µ –¥–≤—É–º—è —Å–ø–æ—Å–æ–±–∞–º–∏, –∏—Å–ø–æ–ª—å–∑—É—è `function declaration` & `arrow function`.
console.log("Task 5");
// function declaration
{
  const numbers = [5, 9, 13, 24, 54, 10, 13, 99, 1, 5];

  function getPositiveNumber(num) {
    if (num % 2 === 0) return true;
  }

  const firstPositiveNumder = numbers.find(getPositiveNumber);

  console.log(firstPositiveNumder);

  // arrow function

  const firstPositiveNumder1 = numbers.find((item) => item % 2 === 0);

  console.log(firstPositiveNumder1);
}

// ### ADVANCED level

// #### Task 1 üë®‚Äçüè´

// + –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä **Student**
// + –í –∫–∞–∂–¥–æ–º –æ–±—ä–µ–∫—Ç–µ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –ø–æ–ª—è **salary** , **rate** , **name**
// + –í–Ω—É—Ç—Ä–∏ –æ–±—ä–µ–∫—Ç–∞ —Ç–∞–∫–∂–µ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ—Ç–æ–¥ –∫–æ—Ç–æ—Ä—ã–π –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—É–º–º—É –≤–æ–∑–º–æ–∂–Ω–æ–≥–æ –∫—Ä–µ–¥–∏—Ç–∞.
// + –ù–∞ –æ—Å–Ω–æ–≤–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞—Ç—å –º–∏–Ω–∏–º—É–º 5 —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –∏ –∏–º—è –∫–∞–∂–¥–æ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–∞ –¥–æ–ª–∂–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –∏–º–µ–Ω–∏ —Å—Ç—É–¥–µ–Ω—Ç–∞ –∏–∑ –≤–∞—à–µ–π –≥—Ä—É–ø–ø—ã.

// + –°–æ–∑–¥–∞—Ç—å –º–∞—Å—Å–∏–≤ **students** –∏ –ø–æ–º–µ—Å—Ç–∏—Ç—å –≤ –Ω–µ–≥–æ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤.
// + –ù–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å—Ç—É–¥–µ–Ω—Ç–æ–≤. –ò –≤—ã—á–∏—Å–ª—è–µ—Ç –æ–±—â—É—é —Å—É–º–º—É –∫—Ä–µ–¥–∏—Ç–æ–≤ –∫–æ—Ç–æ—Ä—É—é –º–æ–∂–Ω–æ –≤—ã–¥–∞—Ç—å –≥—Ä—É–ø–ø–µ.

// rate –∏–º–µ–µ—Ç 4 –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ A B C D
// + **A** - –æ—Ç–ª–∏—á–Ω—ã–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 12 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
// + **B** - —Ö–æ—Ä–æ—à–∏–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 9 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
// + **C** - –Ω–µ–ø–ª–æ—Ö–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –º–æ–∂–µ–º –¥–∞—Ç—å —á–µ–ª–æ–≤–µ–∫—É –∫—Ä–µ–¥–∏—Ç –∫–∞–∫ 6 –µ–≥–æ –∑–∞—Ä–ø–ª–∞—Ç
// + **D** - –ø–ª–æ—Ö–æ–π —Ä–µ–π—Ç–∏–Ω–≥ –∏ –º—ã –Ω–µ –º–æ–∂–µ–º –¥–∞—Ç—å –∫—Ä–µ–¥–∏—Ç

console.log("Task 1. ADVANCED");

function Student(student) {
  this.name = student.name;
  this.rate = student.rate;
  this.salary = student.salary;
  this.credit = function () {
    if (this.rate == "A") return this.salary * 12;
    if (this.rate == "B") return this.salary * 9;
    if (this.rate == "C") return this.salary * 6;
    if (this.rate == "D") return this.salary * 0;
  };
}

// const student_1 = new Student("Allena", "A", 200);
// console.log(student_1);

// const student_2 = new Student("Aliona", "B", 100);
// console.log(student_2);

// const student_3 = new Student("Andrey", "C", 100);
// console.log(student_3);

// const student_4 = new Student("Kseniya", "D", 100);
// console.log(student_4);

// const student_5 = new Student("Liza", "A", 100);
// console.log(student_5);

// const students = [student_1, student_2, student_3, student_4, student_5];

const studentsInfo = [
  { name: "Allena", rate: "A", salary: 100 },
  { name: "Aliona", rate: "B", salary: 100 },
  { name: "Andrey", rate: "C", salary: 100 },
  { name: "Kseniya", rate: "D", salary: 100 },
  { name: "Liza", rate: "A", salary: 100 },
];

const students = studentsInfo.map((student) => new Student(student));
console.log(students);

function getSumCredits(arr) {
  let sumCredits = 0;

  for (let value of arr) {
    sumCredits += value.credit();
  }
  return sumCredits;
}

console.log(getSumCredits(students));

// #### Task 2 üë®‚Äçüè´ –¢—Ä–æ–ª–ª–∏ –∞—Ç–∞–∫—É—é—Ç –Ω–∞—à —Ä–∞–∑–¥–µ–ª —Å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º–∏!!!

// + –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —Å–ø–æ—Å–æ–± —Å–ø—Ä–∞–≤–∏—Ç—å—Å—è —Å —ç—Ç–æ–π —Å–∏—Ç—É–∞—Ü–∏–µ–π - —É–¥–∞–ª–∏—Ç—å –≤—Å–µ –≥–ª–∞—Å–Ω—ã–µ –∏–∑ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–µ–≤ —Ç—Ä–æ–ª–ª–µ–π, –Ω–µ–π—Ç—Ä–∞–ª–∏–∑—É—è —É–≥—Ä–æ–∑—É.
// + –í–∞—à–∞ –∑–∞–¥–∞—á–∞ - –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å—Ç—Ä–æ–∫—É –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É —Å —É–¥–∞–ª–µ–Ω–Ω—ã–º–∏ –≥–ª–∞—Å–Ω—ã–º–∏.
// + –ù–∞–ø—Ä–∏–º–µ—Ä, —Å—Ç—Ä–æ–∫–∞ ¬´This website is for losers LOL!¬ª —Å—Ç–∞–Ω–µ—Ç "Ths wbst s fr lsrs LL!".

// > –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: –¥–ª—è —ç—Ç–æ–π –∑–∞–¥–∞—á–∏ **`y`** –Ω–µ —Å—á–∏—Ç–∞–µ—Ç—Å—è –≥–ª–∞—Å–Ω–æ–π.

console.log("Task 2. ADVANCED");

const vowels = ["a", "e", "i", "o", "u", "A", "E", "I", "O", "U"];

function deleteVowels(str) {
  return str
    .split("")
    .filter((item) => !vowels.includes(item))
    .join("");
}

console.log(deleteVowels("This website is for losers LOL!"));

// #### Task 3 üë®‚Äçüè´ –ù–µ—Ç –∏—Å—Ç–æ—Ä–∏–∏, –Ω–µ—Ç —Ç–µ–æ—Ä–∏–∏

// + –í –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—ã—Ö –Ω–∏–∂–µ –ø—Ä–∏–º–µ—Ä–∞—Ö –ø–æ–∫–∞–∑–∞–Ω–æ, –∫–∞–∫ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é:

// ```javascript
//     accum("abcd") -> "A-Bb-Ccc-Dddd"
//     accum("RqaEzty") -> "R-Qq-Aaa-Eeee-Zzzzz-Tttttt-Yyyyyyy"
//     accum("cwAt") -> "C-Ww-Aaa-Tttt"
// ```

// > –ü–∞—Ä–∞–º–µ—Ç—Ä - —ç—Ç–æ —Å—Ç—Ä–æ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –≤–∫–ª—é—á–∞–µ—Ç —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –æ—Ç a..z –∏ A..Z.

console.log("Task 3. ADVANCED");

let splitString = [];

function accum(str) {
  return (splitString = str
    .toLocaleLowerCase()
    .split("")
    // .map((item, index) => item.repeat(index + 1))
    // .map((item) => item[0].toUpperCase() + item.slice(1))
    // !   —Å–ø–æ—Å–æ–± –Ω–∏–∂–µ –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã–ø–æ–ª–Ω–∏—Ç—å –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–µ–π—Å—Ç–≤–∏—è –∑–∞ –æ–¥–∏–Ω –ø–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞ 
    .map((item, index) => {
      let newItem = item.repeat(index + 1);
       newItem = newItem[0].toUpperCase() + newItem.slice(1);
       return newItem;
    })
    .join("-"));
}

console.log(accum("abcd"));
console.log(accum("RqaEzty"));
console.log(accum("cwAt"));

// #### Task 4 üë®‚Äçüè´ –°–∞–º—ã–π –≤—ã—Å–æ–∫–∏–π –∏ —Å–∞–º—ã–π –Ω–∏–∑–∫–∏–π

// + –í —ç—Ç–æ–º –Ω–µ–±–æ–ª—å—à–æ–º –∑–∞–¥–∞–Ω–∏–∏ –≤–∞–º –¥–∞–µ—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–±–µ–ª–∞–º–∏, –∏ –≤—ã –¥–æ–ª–∂–Ω—ã –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–∞–∏–±–æ–ª—å—à–µ–µ –∏ –Ω–∞–∏–º–µ–Ω—å—à–µ–µ —á–∏—Å–ª–æ.

// ```javascript
//     highAndLow("1 2 3 4 5"); // return "5 1"
//     highAndLow("1 2 -3 4 5"); // return "5 -3"
//     highAndLow("1 9 3 4 -5"); // return "9 -5"
// ```
console.log("Task 4. ADVANCED");

function highAndLow(str) {
  let maxMin = str.split(" ");
  return `${Math.max(...maxMin)} ${Math.min(...maxMin)}`;
}

console.log(highAndLow("1 2 3 4 5"));
console.log(highAndLow("1 2 -3 4 5"));
console.log(highAndLow("1 9 3 4 -5"));

// > –°—Ç—Ä–æ–∫–∞ –≤—ã–≤–æ–¥–∞ –¥–æ–ª–∂–Ω–∞ —Å–æ—Å—Ç–æ—è—Ç—å –∏–∑ –¥–≤—É—Ö —á–∏—Å–µ–ª, —Ä–∞–∑–¥–µ–ª–µ–Ω–Ω—ã—Ö –æ–¥–Ω–∏–º –ø—Ä–æ–±–µ–ª–æ–º, –ø—Ä–∏ —ç—Ç–æ–º –Ω–∞–∏–±–æ–ª—å—à–µ–µ —á–∏—Å–ª–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –ø–µ—Ä–≤—ã–º.

// #### Task 5 üë®‚Äçüè´ –ò–∑–æ–≥—Ä–∞–º–º—ã

// + –ò–∑–æ–≥—Ä–∞–º–º–∞ - —ç—Ç–æ —Å–ª–æ–≤–æ, –≤ –∫–æ—Ç–æ—Ä–æ–º –Ω–µ—Ç –ø–æ–≤—Ç–æ—Ä—è—é—â–∏—Ö—Å—è –±—É–∫–≤, –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –∏–ª–∏ –Ω–µ–ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö. –†–µ–∞–ª–∏–∑—É–π—Ç–µ —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å—Ç—Ä–æ–∫–∞, —Å–æ–¥–µ—Ä–∂–∞—â–∞—è —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã, –∏–∑–æ–≥—Ä–∞–º–º–æ–π. –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏–º, —á—Ç–æ –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ —è–≤–ª—è–µ—Ç—Å—è –∏–∑–æ–≥—Ä–∞–º–º–æ–π. –†–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤ –º—ã –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º.

// ```javascript
//     isIsogram("Dermatoglyphics") == true
//     isIsogram("aba") == false
//     isIsogram("moOse") == false // -- ignore letter case
// ```
console.log("Task 5. ADVANCED");

function isIsogram(str) {
  let arrIsIsogram = str.toLocaleLowerCase().split("");

  return !arrIsIsogram.some(
    (item, index) => arrIsIsogram.indexOf(item) !== index
  );
}
//!  1) –º–µ—Ç–æ–¥ ".toLocaleLowerCase" –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ—á–Ω—ã–µ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤
// !  2) –º–µ—Ç–æ–¥ ".split("")" –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–±–∏—Ç—å —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤,–ø—Ä–∏ —ç—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ "("")" –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
//!  3) –º–µ—Ç–æ–¥ ".some" –ø—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ –∫—Ä–∞–π–Ω–µ–π –º–µ—Ä–µ –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤–µ —É—Å–ª–æ–≤–∏—é, –∑–∞–¥–∞–Ω–Ω–æ–º—É –≤ –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
//! 3.1) –í —Ç–µ–ª–µ —Ñ—É–Ω–∫—Ü–∏–∏, –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–π –º–µ—Ç–æ–¥–æ–º ".some".—Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç—Å—è –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã–π –º–µ—Ç–æ–¥–æ–º indexOf(item) (–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤–æ–≥–æ –Ω–∞–π–¥–µ–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ => –Ω–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–æ–ª–Ω—ã–π –ø–µ—Ä–µ–±–æ—Ä –º–∞—Å—Å–∏–≤–∞!) –∏ –∏–Ω–¥–µ–∫—Å–∞ —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–≥–æ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–µ–π –º–µ—Ç–æ–¥–∞ ".some.
//! —Ç.–∫. –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —É—Å–ª–æ–≤–∏—è "indexOf(item) !== index" –º–µ—Ç–æ–¥ .some(item, index)  –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç "true", –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —É—Å–ª–æ–≤–∏–π –∑–∞–¥–∞—á–∏ –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –ø–æ–ª—É—á–µ–Ω–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ –ø—Ä–æ—Ç–∏–≤–æ–ø–æ–ª–æ–∂–Ω–æ–µ —Å –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ "!"
console.log(isIsogram("Dermatoglyphics"));
console.log(isIsogram("aba"));
console.log(isIsogram("moOse"));

// #### Task 6 üë®‚Äçüè´ –°—á–∏—Ç–∞–µ–º –∫–æ–¥—ã —Å–∏–º–≤–æ–ª–æ–≤

// + –£—á–∏—Ç—ã–≤–∞—è —Å—Ç—Ä–æ–∫—É, –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç–µ –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ –µ–≥–æ –∫–æ–¥ —Å–∏–º–≤–æ–ª–∞ ASCII –∏ —Å–æ–µ–¥–∏–Ω–∏—Ç–µ –∏—Ö –≤–º–µ—Å—Ç–µ, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å —á–∏—Å–ª–æ. –ü–æ–º–µ—Å—Ç–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é **`total1`**

// + –ó–∞—Ç–µ–º –∑–∞–º–µ–Ω–∏—Ç–µ –≤—Å–µ —á–∏—Å–ª–∞ `7` –Ω–∞ —á–∏—Å–ª–æ `1` –∏ –Ω–∞–∑–æ–≤–∏—Ç–µ —ç—Ç–æ —á–∏—Å–ª–æ **`total2`**

// + –ü–æ—Å–ª–µ –≤–µ—Ä–Ω–∏—Ç–µ —Ä–∞–∑–Ω–∏—Ü—É –º–µ–∂–¥—É —Å—É–º–º–æ–π —Ü–∏—Ñ—Ä **`total1`** –∏ **`total2`**

// > 'ABC' --> 'A' = 65, 'B' = 66, 'C' = 67 --> 656667
console.log("Task 6. ADVANCED");

function getSymbolFromStr(str) {
  let total1 = "";
  for (let i = 0; i <= str.length - 1; i++) {
    total1 += str.charCodeAt(i);
  }
  return total1;
}

// console.log(getSymbolFromStr("ABC"));

function replaceNum(str, a = 7, b = 1) {
  let total1 = getSymbolFromStr(str);
  let total2 = total1
    .split("")
    .map((item) => (+item === a ? b : item))
    .join("");
  return total2;
}
// console.log(replaceNum("ABC"));

function differenceBetweenSum(str, a = 7, b = 1) {
  let total1 = getSymbolFromStr(str);
  let total2 = replaceNum(str, a, b);
  let result =
    total1
      .split("")
      .reduce((leftMember, rightMember) => +leftMember + +rightMember) -
    total2
      .split("")
      .reduce((leftMember, rightMember) => +leftMember + +rightMember);
  return result;
}

console.log(differenceBetweenSum("ABC"));

// #### Task 7 üë®‚Äçüè´ –î—É–±–ª–∏–∫–∞—Ç—ã

// + –¶–µ–ª—å —ç—Ç–æ–≥–æ —É–ø—Ä–∞–∂–Ω–µ–Ω–∏—è - –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞—Ç—å —Å—Ç—Ä–æ–∫—É –≤ –Ω–æ–≤—É—é —Å—Ç—Ä–æ–∫—É, –≥–¥–µ –∫–∞–∂–¥—ã–π —Å–∏–º–≤–æ–ª –≤ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ —Ä–∞–≤–µ–Ω
// `(`**, –µ—Å–ª–∏ —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª –ø–æ—è–≤–ª—è–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω —Ä–∞–∑ –≤ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ, –∏–ª–∏ **`)`**, –µ—Å–ª–∏ —ç—Ç–æ—Ç —Å–∏–º–≤–æ–ª –≤—Å—Ç—Ä–µ—á–∞–µ—Ç—Å—è –±–æ–ª–µ–µ –æ–¥–Ω–æ–≥–æ —Ä–∞–∑–∞ –≤ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–µ. –ò–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤ –ø—Ä–∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–∏ –¥—É–±–ª–∏–∫–∞—Ç–∞ —Å–∏–º–≤–æ–ª–∞.

// ```javascript
//     "din" => "((("
//     "recede" => "()()()"
//     "Success" => ")())())"
//     "(( @" => "))(("
// ```
console.log("Task 7. ADVANCED");

function transformStr(str) {
  let arrFromStr = str.toLocaleLowerCase().split("");

  let strFromArr = arrFromStr
    .map(function (item, index) {
      if (
        arrFromStr.lastIndexOf(item) === index &&
        arrFromStr.indexOf(item) === index
      ) {
        return "(";
      } else {
        return ")";
      }
    })
    .join("");
  return strFromArr;
}

//!  1) –º–µ—Ç–æ–¥ ".toLocaleLowerCase" –ø—Ä–µ–æ–±—Ä–∞–∑—É–µ—Ç –≤—Å–µ —Å–∏–º–≤–æ–ª—ã —Å—Ç—Ä–æ–∫–∏ –≤ —Å—Ç—Ä–æ—á–Ω—ã–µ –∏ –ø–æ–∑–≤–æ–ª—è–µ—Ç –∏–≥–Ω–æ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –∑–∞–≥–ª–∞–≤–Ω—ã—Ö –±—É–∫–≤
// !  2) –º–µ—Ç–æ–¥ ".split("")" –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–∑–±–∏—Ç—å —Å—Ç—Ä–æ–∫—É –Ω–∞ –º–∞—Å—Å–∏–≤ —Å—Ç—Ä–æ—á–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤,–ø—Ä–∏ —ç—Ç–æ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—è –ø—É—Å—Ç–æ–π —Å—Ç—Ä–æ–∫–∏ "("")" –ø–æ–∑–≤–æ–ª—è–µ—Ç –ø–æ–ª—É—á–∏—Ç—å –º–∞—Å—Å–∏–≤ —Å–æ—Å—Ç–æ—è—â–∏–π –∏–∑ —Å–∏–º–≤–æ–ª–æ–≤ –∏—Å—Ö–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
// !  3) –º–µ—Ç–æ–¥ ".map" –≤—ã–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –Ω–æ–≤—ã–π –º–∞—Å—Å–∏–≤ –∏–∑ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π. –í —Ñ—É–Ω–∫—Ü–∏—é –ø–æ–º–µ—â–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ "If", –º–µ—Ç–æ–¥–æ–≤ "lastIndexOf()" –∏ ".indexOf()" –∏ –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–≤ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è "===" –∏ "&&".
// !  3.1) –º–µ—Ç–æ–¥ ".indexOf()" –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ "item" –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ —Ñ—É–Ω–∫—Ü–∏–µ–π –≤—ã–∑–≤–∞–Ω–Ω–æ–π –º–µ—Ç–æ–¥–æ–º "map".  –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –Ω–∞—á–∞–ª–∞ –º–∞—Å—Å–∏–≤–∞ –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏. –ú–µ—Ç–æ–¥ "lastIndexOf()" —Ç–∞–∫–∂–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–¥–µ–∫—Å —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º —Å–æ–≤–ø–∞–¥–µ–Ω–∏–∏, –Ω–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å –∫–æ–Ω—Ü–∞ –º–∞—Å—Å–∏–≤–∞.
//  !  3.2 –° –ø–æ–º–æ—â—å—é –æ–ø–µ—Ä–∞—Ç–æ—Ä–∞ "===" –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –∏–Ω–¥–µ–∫—Å–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–æ–º ".indexOf()" –∏ –∏–Ω–¥–µ–∫—Å–∞, –∫–æ—Ç–æ—Ä—ã–π –±—ã–ª –ø–µ—Ä–µ–¥–∞–Ω –≤ –∫–∞—á–µ—Å—Ç–≤–µ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞ —Ñ—É–Ω–∫—Ü–∏–µ–π –≤—ã–∑–≤–∞–Ω–Ω–æ–π –º–µ—Ç–æ–¥–æ–º "map". –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è –¥–ª—è –∏–Ω–¥–µ–∫—Å–∞ –≤–æ–∑–≤—Ä–∞—â–µ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–æ–º "lastIndexOf ()". –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –±—É–ª–µ–≤—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è —Å—Ä–∞–≤–Ω–∏–≤–∞—é—Ç—Å—è –º–µ–∂–¥—É —Å–æ–±–æ–π –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º –ª–æ–≥–∏—á–µ—Å–∫–æ–≥–æ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è "&&". –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å—Ä–∞–∑—É –¥–≤—É—Ö –º–µ—Ç–æ–¥–æ–≤ ".indexOf()" –∏ "lastIndexOf ()" –¥–ª—è –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Å—Å–∏–≤–∞ –Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –∏–Ω–¥–µ–∫—Å—É –∏ –ø–æ—Å–ª–µ–¥—É—é—â–µ–µ –∏—Ö —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –º–µ–∂–¥—É —Å–æ–±–æ–π –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã—è–≤–∏—Ç—å –¥—É–±–ª–∏–∫–∞—Ç (–∞–Ω–∞–ª–æ–≥–∏—á–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å –∏—Å–ø–æ–ª—å–∑—É—è –æ–ø–µ—Ä–∞—Ç–æ—Ä—ã —Å—Ä–∞–≤–Ω–µ–Ω–∏—è "!==" –∏ "||" —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ). –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ –∑–∞–¥–∞—á–∏ —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ–≥–æ –∏–∑ –º–µ—Ç–æ–¥–æ–≤ –Ω–µ –¥–∞–µ—Ç —Ç—Ä–µ–±—É–µ–º–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è, —Ç.–∫. –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–µ—Ä–≤–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞ –º–∞—Å—Å–∏–≤–∞,–∫–æ—Ç–æ—Ä—ã–π –∏–º–µ–µ—Ç –¥—É–±–ª–∏–∫–∞—Ç, –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å—Å—è "true" –∏ —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –¥—É–±–ª–∏–∫–∞—Ç–∞ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω–æ "false"
// !  3.3) –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è "if" –ø–æ–∑–≤–æ–ª—è–µ—Ç, –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –ø–æ–ª—É—á–µ–Ω–Ω–æ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏–π –∑–Ω–∞—á–µ–Ω–∏–µ "(" –∏–ª–∏ ")"

console.log(transformStr("din"));
console.log(transformStr("recede"));
console.log(transformStr("Success"));
console.log(transformStr("(( @"));
